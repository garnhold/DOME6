//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Garrett/Documents/Visual Studio 2013/Projects/DOME6Grammar\DOME.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DOMEParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IDOMEVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.grammarDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrammarDefinition([NotNull] DOMEParser.GrammarDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>definition_RuleDefinition_ConcreteDirect</c>
	/// labeled alternative in <see cref="DOMEParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition_RuleDefinition_ConcreteDirect([NotNull] DOMEParser.Definition_RuleDefinition_ConcreteDirectContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>definition_RuleDefinition_ConcreteInherited</c>
	/// labeled alternative in <see cref="DOMEParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition_RuleDefinition_ConcreteInherited([NotNull] DOMEParser.Definition_RuleDefinition_ConcreteInheritedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>definition_RuleDefinition_Abstract</c>
	/// labeled alternative in <see cref="DOMEParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition_RuleDefinition_Abstract([NotNull] DOMEParser.Definition_RuleDefinition_AbstractContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>definition_TokenDefinition</c>
	/// labeled alternative in <see cref="DOMEParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition_TokenDefinition([NotNull] DOMEParser.Definition_TokenDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitId([NotNull] DOMEParser.IdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.grammarHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrammarHeader([NotNull] DOMEParser.GrammarHeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.importHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportHeader([NotNull] DOMEParser.ImportHeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>grammarTypeParser</c>
	/// labeled alternative in <see cref="DOMEParser.grammarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrammarTypeParser([NotNull] DOMEParser.GrammarTypeParserContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>grammarTypeLexer</c>
	/// labeled alternative in <see cref="DOMEParser.grammarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrammarTypeLexer([NotNull] DOMEParser.GrammarTypeLexerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.info"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInfo([NotNull] DOMEParser.InfoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quantifierNoneOrOne</c>
	/// labeled alternative in <see cref="DOMEParser.quantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantifierNoneOrOne([NotNull] DOMEParser.QuantifierNoneOrOneContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quantifierNoneOrMore</c>
	/// labeled alternative in <see cref="DOMEParser.quantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantifierNoneOrMore([NotNull] DOMEParser.QuantifierNoneOrMoreContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quantifierOneOrMore</c>
	/// labeled alternative in <see cref="DOMEParser.quantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantifierOneOrMore([NotNull] DOMEParser.QuantifierOneOrMoreContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.ruleReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleReference([NotNull] DOMEParser.RuleReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.ruleDefinitionConcreteDirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleDefinitionConcreteDirect([NotNull] DOMEParser.RuleDefinitionConcreteDirectContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.ruleDefinitionConcreteInherited"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleDefinitionConcreteInherited([NotNull] DOMEParser.RuleDefinitionConcreteInheritedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.ruleDefinitionAbstract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleDefinitionAbstract([NotNull] DOMEParser.RuleDefinitionAbstractContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleAtomLiteral</c>
	/// labeled alternative in <see cref="DOMEParser.ruleAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleAtomLiteral([NotNull] DOMEParser.RuleAtomLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleAtomTokenReference</c>
	/// labeled alternative in <see cref="DOMEParser.ruleAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleAtomTokenReference([NotNull] DOMEParser.RuleAtomTokenReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleAtomRuleReference</c>
	/// labeled alternative in <see cref="DOMEParser.ruleAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleAtomRuleReference([NotNull] DOMEParser.RuleAtomRuleReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleAtomGroup</c>
	/// labeled alternative in <see cref="DOMEParser.ruleAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleAtomGroup([NotNull] DOMEParser.RuleAtomGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleAtomInfoGroup</c>
	/// labeled alternative in <see cref="DOMEParser.ruleAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleAtomInfoGroup([NotNull] DOMEParser.RuleAtomInfoGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleExpression_Sequence</c>
	/// labeled alternative in <see cref="DOMEParser.ruleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleExpression_Sequence([NotNull] DOMEParser.RuleExpression_SequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ruleExpression_Alternatives</c>
	/// labeled alternative in <see cref="DOMEParser.ruleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuleExpression_Alternatives([NotNull] DOMEParser.RuleExpression_AlternativesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.settings"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSettings([NotNull] DOMEParser.SettingsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setting_Flag</c>
	/// labeled alternative in <see cref="DOMEParser.setting"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetting_Flag([NotNull] DOMEParser.Setting_FlagContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setting_Value</c>
	/// labeled alternative in <see cref="DOMEParser.setting"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetting_Value([NotNull] DOMEParser.Setting_ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.tokenReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenReference([NotNull] DOMEParser.TokenReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DOMEParser.tokenDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenDefinition([NotNull] DOMEParser.TokenDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomTokenReference</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomTokenReference([NotNull] DOMEParser.TokenAtomTokenReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomAlternatives</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomAlternatives([NotNull] DOMEParser.TokenAtomAlternativesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomPeriod</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomPeriod([NotNull] DOMEParser.TokenAtomPeriodContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomLiteral</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomLiteral([NotNull] DOMEParser.TokenAtomLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomInfoGroup</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomInfoGroup([NotNull] DOMEParser.TokenAtomInfoGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomGroup</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomGroup([NotNull] DOMEParser.TokenAtomGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomSequence</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomSequence([NotNull] DOMEParser.TokenAtomSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tokenAtomClass</c>
	/// labeled alternative in <see cref="DOMEParser.tokenAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTokenAtomClass([NotNull] DOMEParser.TokenAtomClassContext context);
}
